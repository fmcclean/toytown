#!/usr/bin/env python
# -*- coding: utf-8 -*-


import run
import os
from scenario import Scenario


agents = [
    ["kids & work", "home 1", [
        ["home 1", "daily 7:46 0m", "school", 1],
        ["school", "5m 1m", "work", 0.9],
        ["school", "5m 1m", "some shop", 0.1],
        ["some shop", "2h 1h", "work", 1],
        ["work", "daily 17h 15m", "home 1", 0.75],
        ["work", "daily 17h 15m", "supermarket", 0.15],
        ["work", "daily 17h 15m", "home 2", 0.1],
        ["supermarket", "45m 10m", "home 1", 1],
        ["home 2", "daily 20h 2h", "some recreation", 0.1],
        ["some recreation", "3h 1h", "home 1", 1],

        ["evacuate", "5m 1m", "some evacuation point", 0.9],
        ["evacuate", "0s 0s", "resume", 0.1],
        ["some evacuation point", "daily 4h 1h", "home 1", 1]
    ]],
    ["test2", "home", [
        ["home", "0m 0m", "school", 1],
        ["school", "0m 0m", "home", 1],

        ["evacuate", "0m 0m", "some evacuation point", 0.9],
        ["evacuate", "0s 0s", "resume", 0.1],
        ["some evacuation point", "0m 0m", "home", 1],
    ]],
    ["transit eastbound", "A55 west", [
        ["A55 west", "0s 0s", "A55 east", 1],
        ["A55 east", "0s 0s", "exit", 1],
    ]],
    ["transit westbound", "A55 east", [
        ["A55 east", "0s 0s", "A55 west", 1],
        ["A55 west", "0s 0s", "exit", 1],
    ]],
    ["test", "towyn test", [
        ["towyn test", "0s 0s", "rhyl test", 1],
        ["rhyl test", "0s 0s", "towyn test", 1],

        ["evacuate", "0s 0s", "some evacuation point", 1],
        ["some evacuation point", "5m 1m", "towyn test", 1],
    ]]]

warning_times = ["07:50:00", "07:51:00", "07:52:00"]

sea_levels = [4, 5, 6]

codes = [
    [0, "house/residence/home"],
    [-2, "shop"],
    [-3, "work"],
    [-4, "other"],
    [-5, "recreation"],
    [-6, "warehouse"]
]

defences = [
    [292835.779, 378240.1388, "a"],
    [292885.779, 378240.1388],
    [292935.779, 378290.1388],
    [292985.779, 378290.1388],
    [293035.779, 378290.1388],
    [293085.779, 378290.1388],
    [293135.779, 378340.1388],
    [293185.779, 378340.1388],
    [293235.779, 378340.1388],
    [293285.779, 378340.1388],
    [293335.779, 378390.1388],
    [293385.779, 378390.1388],
    [293435.779, 378390.1388],
    [293485.779, 378390.1388],
    [293535.779, 378390.1388],
    [293585.779, 378440.1388],
    [293635.779, 378440.1388],
    [293685.779, 378440.1388],
    [293735.779, 378440.1388],
    [293785.779, 378490.1388],
    [293835.779, 378490.1388],
    [293885.779, 378490.1388],
    [293935.779, 378490.1388],
    [293985.779, 378490.1388],
    [294035.779, 378540.1388],
]

defences_to_breach = ["a"]

buildings = [
    [302885.8, 376190.1, 1000, "4000000012843434"],
    [305883, 374914, 1001, "4000000012843525"],
    [291667, 378218, 1002, "4000000012472802"],
    [298635, 380140, 1003, "4000000012473749"],
    [301386, 381040, 1004, "4000000012862396"]
]

roads = [
    ["4000000012474130" "4000000012473099" "4000000012472802" 2591530 "Dual Carriageway" [[294191255 378471609] [294173568 378465056] [294117131 378445541] [293998693 378394772] [293877735 378344673] [293788715 378312836] [293769636 378306518] [293733662 378293961] [293639966 378264113] [293593081 378250000] [293579061 378245780] [293518120 378229629] [293451090 378212631] [293380066 378195909] [293273973 378173494] [293197946 378159846] [293109923 378146677] [293070000 378141338] [293069947 378141331] [293001000 378132000] [293000000 378131000] [292929000 378123000] [292844000 378115000] [292750000 378109000] [292636000 378103000] [292524000 378100000] [292259000 378108000] [292112000 378119000] [292051000 378125000] [292000000 378132000] [291930000 378142500] [291920000 378144000] [291883000 378152000] [291832000 378164000] [291809000 378171000] [291763000 378185000] [291750000 378189206] [291729000 378196000] [291671000 378217000] [291667000 378218000] ]]
["4000000012474131" "4000000012472803" "4000000012473109" 2583040 "Dual Carriageway" [[291672000 378234000] [291701000 378223000] [291744000 378208000] [291750000 378206047] [291787000 378194000] [291848000 378176000] [291893000 378166000] [291930000 378158211] [291931000 378158000] [291951000 378154000] [292000000 378146000] [292053000 378138000] [292075000 378135000] [292185000 378126000] [292223000 378124000] [292302000 378120000] [292394000 378116000] [292510000 378115000] [292633000 378117000] [292759000 378123000] [292938000 378139000] [293000000 378146000] [293069864 378155200] [293070000 378155216] [293076850 378156027] [293171925 378170041] [293298974 378192441] [293467964 378230416] [293542148 378250000] [293550937 378252320] [293591899 378263450] [293673796 378288632] [293769677 378320855] [293802735 378331692] [293862728 378353704] [293891376 378364929] [293920641 378376869] [293998818 378410017] [294154953 378474112] [294187380 378485397] ]]
["4000000012475161" "4000000012536904" "4000000012536903" 1034990 "Single Carriageway" [[293241583 374981608] [293241000 374981000] [293220435 374974119] [293196925 374966031] [293180359 374961715] [293169500 374960601] [293130242 374961715] [293114789 374961297] [293077619 374955311] [293058547 374953780] [293036133 374950717] [293025369 374947536] [292996597 374933872] [292977803 374926355] [292962072 374921622] [292947315 374918698] [292928104 374918002] [292907500 374918141] [292890238 374919394] [292884251 374920926] [292878404 374924684] [292869634 374929696] [292861699 374931645] [292855017 374931923] [292845828 374929557] [292825086 374922039] [292804900 374912990] [292798913 374909928] [292793206 374905751] [292773298 374889046] [292744000 374861000] [292731395 374846446] [292722764 374839068] [292704805 374831550] [292672925 374820413] [292664155 374817629] [292655663 374817768] [292648284 374819578] [292617936 374826399] [292571995 374836005] [292564199 374836980] [292555011 374837258] [292537000 374837000] [292518677 374832664] [292502667 374828627] [292492922 374826121] [292483595 374826539] [292474546 374826121] [292459232 374827792] [292448095 374830576] [292422000 374844000] [292408976 374848534] [292393106 374850762] [292377000 374852000] [292355000 374849000] [292344000 374847000] [292340000 374846000] [292325727 374839764] [292310000 374833000] [292290000 374821000] [292282000 374815000] [292274979 374808392] ]]
["4000000012475162" "4000000012536907" "4000000012471707" 768810 "Single Carriageway" [[293814565 374909901] [293817000 374913000] [293840000 374940000] [293892000 375000000] [293909000 375020000] [293915000 375029000] [293925000 375046000] [293931000 375057000] [293953000 375122000] [294000000 375252000] [294009000 375274000] [294012000 375281000] [294022000 375297000] [294043000 375332000] [294057000 375356000] [294078000 375391000] [294086000 375408000] [294100000 375439000] [294103000 375449000] [294105000 375454000] [294138000 375531000] [294163000 375584000] [294164000 375587000] ]]
["4000000012475163" "4000000012471697" "4000000012471707" 1287930 "Single Carriageway" [[293674000 374491000] [293688791 374497544] [293747960 374540838] [293780575 374560176] [293792985 374569123] [293811169 374582689] [293831950 374599718] [293870338 374634930] [293886212 374652248] [293909014 374677359] [293953000 374720000] [293977707 374739702] [293999065 374759329] [294019000 374780000] [294033000 374796000] [294042000 374810000] [294046000 374818000] [294051000 374836000] [294055000 374858000] [294056000 374867000] [294057000 374891000] [294067000 374940000] [294069000 374952000] [294066000 374986000] [294066893 374997158] [294079741 375031192] [294089896 375056055] [294098000 375082000] [294103000 375106000] [294108000 375144000] [294113000 375194000] [294114000 375209000] [294114000 375217000] [294112000 375235000] [294113000 375243000] [294120000 375277000] [294122000 375297000] [294131000 375355000] [294136000 375370000] [294145000 375390000] [294149000 375399000] [294155000 375412000] [294160724 375435025] [294170087 375464333] [294173000 375481000] [294173000 375490000] [294174000 375507000] [294174000 375534000] [294171000 375567000] [294170000 375571000] [294168000 375580000] [294164000 375587000] ]]
["4000000012475183" "4000000012471885" "4000000012471871" 1074410 "Single Carriageway" [[296325000 375269000] [296320000 375267000] [296319000 375266000] [296316000 375261000] [296310000 375255000] [296292000 375238000] [296270000 375223000] [296242000 375199000] [296230000 375185500] [296226000 375181000] [296212000 375167000] [296192000 375143000] [296170000 375119000] [296166000 375115000] [296154000 375098000] [296151000 375091000] [296143000 375068000] [296138000 375048000] [296135000 375029000] [296129000 375000000] [296115000 374952000] [296113882 374939760] [296120765 374913375] [296123748 374906033] [296133843 374859459] [296140726 374834910] [296146691 374806001] [296146877 374800316] [296148000 374766000] [296147000 374751000] [296144855 374735795] [296132466 374679355] [296130631 374664213] [296132007 374652053] [296142000 374623000] [296160000 374576000] [296168000 374525000] [296170000 374500000] [296172000 374468000] [296172000 374465000] [296152959 374396392] [296131099 374323747] [296123000 374301000] [296122000 374296000] [296120626 374291727] ]]
["4000000012475185" "4000000012471901" "4000000012471912" 899540 "Single Carriageway" [[297683956 375061538] [297705235 375016215] [297713741 374995736] [297723857 374974380] [297733652 374953666] [297756293 374907100] [297776043 374872738] [297783590 374862301] [297798523 374845119] [297830638 374806101] [297845410 374790846] [297858898 374776074] [297869817 374765797] [297878167 374760177] [297883729 374757969] [297889086 374755842] [297906106 374747331] [297918481 374741005] [297924422 374737787] [297932095 374736797] [297941502 374740015] [297952889 374746204] [297995960 374742490] [298010000 374740643] [298024179 374738777] [298070000 374735332] [298090024 374733827] [298164284 374726896] [298224188 374721697] [298250000 374719038] [298265032 374717489] [298287557 374714766] [298308846 374710063] [298373700 374686547] [298399196 374675408] ]]
]

if not os.path.exists('tests/outputs'):
    os.mkdir('tests/outputs')

inputs_path = 'tests/towyn'
model_path = 'tests/outputs/towyn'

model_path=model_path,
codes_path=os.path.join(inputs_path, 'codes.txt'),
defences_path=os.path.join(inputs_path, 'defences.txt'),
preprocessed_buildings_path=os.path.join(inputs_path, 'preprocessed-buildings.txt'),
roads_path=os.path.join(inputs_path, 'roads.txt'),
terrain_path=os.path.join(inputs_path, 'terrain.txt'),
agents=agents,
width=249,
height=179,
start_time='7:45',
end_time='8:20'

for defence in defences_to_breach:
    for warning_time in warning_times:
        for sea_level in sea_levels:
            timeline = [
                [
                    [
                        ["normal", "08:00", "15m"],
                        500,
                        ["agent", "transit eastbound"],
                        0.8,
                        ["agent", "transit westbound"],
                        0.2
                    ],
                    [
                        "0s",
                        10,  # number of agents
                        ["agent", "kids & work"]
                    ],
                    [
                        "07:54",
                        ["sealevel", sea_level]
                    ],
                    [
                        "07:55",
                        ["breach", "a"]
                    ],
                    [
                        warning_time,
                        ["evacuate"]
                    ]
                ]
            ]



            scenario = Scenario(path='tests/outputs/towyn-defence-{}-evacuation-{}-sea-{}'.format(defence,
                                                                                                  warning_time.replace(':', ''),
                                                                                                  sea_level),
                                start_time='7:45',
                                end_time='8:20',
                                agents=agents,
                                timeline=timeline,
                                codes=codes,
                                defences=defences,
                                buildings=buildings,
                                roads=roads,
                                terrain=terrain)

            r.start(name='{}-{}-{}'.format(defence, warning_time.replace(':', '.'), sea_level), )
